name: CD Deploy to AKS
on:
  workflow_run:
    workflows: ["CI Build & Push"]
    types: [completed]

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          client-secret: ${{ secrets.ARM_CLIENT_SECRET }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Get Terraform Outputs
        id: tfout
        run: |
          echo "acr=$(terraform -chdir=infra output -raw acr_login_server)" >> $GITHUB_OUTPUT
          echo "aks=$(terraform -chdir=infra output -raw aks_name)" >> $GITHUB_OUTPUT
          echo "rg=$(terraform -chdir=infra output -raw aks_rg_name)" >> $GITHUB_OUTPUT

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --name "${{ steps.tfout.outputs.aks }}" --resource-group "${{ steps.tfout.outputs.rg }}" --overwrite-existing

      - name: Patch Deployment Image
        env:
          ACR_LOGIN_SERVER: ${{ steps.tfout.outputs.acr }}
        run: |
          sed -i "s|<ACR_LOGIN_SERVER>|$ACR_LOGIN_SERVER|g" src/k8s/deployment.yaml

      - name: Deploy to AKS
        run: |
          kubectl apply -f src/k8s/pvc.yaml
          kubectl apply -f src/k8s/deployment.yaml
          kubectl apply -f src/k8s/service.yaml

      - name: Wait for Service External IP
        run: |
          echo "Esperando EXTERNAL-IP..."
          for i in {1..30}; do
            ip=$(kubectl get svc hola-mundo-dotnet-svc -o jsonpath='{.status.loadBalancer.ingress[0].ip}' || true)
            if [ -n "$ip" ]; then
              echo "EXTERNAL-IP=$ip" >> $GITHUB_ENV
              echo "External IP: $ip"
              break
            fi
            sleep 10
          done
